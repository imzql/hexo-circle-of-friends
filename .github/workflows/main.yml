name: update-friends-posts

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0,6,12,18,21 * * *"
  workflow_dispatch:

env:
  SIMPLE_MODE: false
  STORAGE_TYPE: ${{ secrets.STORAGE_TYPE }}
  PROXY: ${{ secrets.PROXY }}
  APPID: ${{ secrets.APPID }}
  APPKEY: ${{ secrets.APPKEY }}
  MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_IP: ${{ secrets.MYSQL_IP }}
  MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
  MYSQL_DB: ${{ secrets.MYSQL_DB }}
  GITHUB_NAME: ${{ secrets.GH_NAME }}
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Set up Python
      uses: actions/setup-python@main
      with:
        python-version: 3.11
        cache: "pip"

    - name: Install requirements
      working-directory: ./hexo_circle_of_friends
      run: |
        pip install -r requirements.txt

    - name: set env
      run: |
        echo "BASE_PATH=$(pwd)" >> $GITHUB_ENV && echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: leancloud Update posts # leancloud
      if: ${{ env.STORAGE_TYPE == 'leancloud' }}
      env:
        APPID: ${{ secrets.APPID }}
        APPKEY: ${{ secrets.APPKEY }}
        LINK: ${{ secrets.LINK }}
        PROXY: ${{ secrets.PROXY }}
      working-directory: ./hexo_circle_of_friends
      run: |
        python run.py

    - name: mysql Update posts # mysql
      if: ${{ env.STORAGE_TYPE == 'mysql' }}
      env:
        MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_IP: ${{ secrets.MYSQL_IP }}
        MYSQL_DB: ${{ secrets.MYSQL_DB }}
      working-directory: ./hexo_circle_of_friends
      run: |
        python run.py

    - name: sqlite Update posts # sqlite
      if: ${{ env.STORAGE_TYPE == 'sqlite' || env.SIMPLE_MODE == 'true' }}
      env:
        PYTHONPATH: ${{ env.PYTHONPATH }}
        SQLITE_DB: ${{ secrets.SQLITE_DB }}
      run: |
        python ./hexo_circle_of_friends/run.py

    - name: Stash unstaged changes
      if: ${{ env.STORAGE_TYPE == 'sqlite' }}
      run: |
        git stash

    - name: Resolve merge conflicts
      if: ${{ env.STORAGE_TYPE == 'sqlite' }}
      run: |
        git config --global user.name "${{ env.GITHUB_NAME }}"
        git config --global user.email "${{ env.GITHUB_EMAIL }}"
        git pull --rebase
        git merge --strategy-option theirs
        git stash pop  # 恢复未暂存的更改
        git add data.db
        git commit -m "Resolved merge conflicts"

    - name: Push sqlite data # sqlite push
      if: ${{ env.STORAGE_TYPE == 'sqlite' }}
      uses: github-actions-x/commit@v2.9
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update data.db"
        files: data.db
        rebase: 'true'
        force-push: 'true'  # 强制推送
        name: ${{ env.GITHUB_NAME }}
        email: ${{ env.GITHUB_EMAIL }}

    - name: mongodb Update posts # mongodb
      if: ${{ env.STORAGE_TYPE == 'mongodb' }}
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
      working-directory: ./hexo_circle_of_friends
      run: |
        python run.py

    - name: simple mode transform # 极简模式转换
      if: ${{ env.SIMPLE_MODE == 'true' }}
      run: |
        python ./hexo_circle_of_friends/utils/simple_mode_transform_json.py

    - name: simple mode push # 推送极简模式
      if: ${{ env.SIMPLE_MODE == 'true' }}
      uses: github-actions-x/commit@v2.9
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update data.json"
        files: data.json
        rebase: 'true'
        name: github-actions[bot]
        email: github-actions@noreply.github.com

    - name: keep alive
      uses: gautamkrishnar/keepalive-workflow@master
